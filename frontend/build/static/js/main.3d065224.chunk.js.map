{"version":3,"sources":["components/context/auth-context.js","components/input.js","components/LoadingSpinner.js","components/portals/BackDrop.jsx","components/portals/Modal.jsx","pages/authentication.jsx","components/profile.js","components/messageInput.jsx","components/messageBox.js","components/drawer.js","components/Header.js","pages/chatPage.jsx","pages/joinRoom.js","components/hook/auth-hook.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","name","roomId","logIn","roomJoin","Input","props","className","label","onChange","event","target","value","type","placeholder","LoadingSpinner","asOverlay","BackDrop","ReactDOM","createPortal","onClick","document","getElementById","ModalOverLay","content","header","onCancel","style","cursor","onSubmit","onSumbit","preventDefault","contentClass","children","Modal","SIGN_UP","LOG_IN","Fragment","show","gql","err","console","log","Authentication","useState","login","setLogin","context","useContext","history","useHistory","error","setError","Name","Email","Password","forumState","setForumState","inputChangeHandler","useCallback","prev","useMutation","update","_","res","onError","signUpUser","signUpData","data","loading","loginUser","loginData","loginLoading","authSubmit","variables","email","password","createUser","id","push","message","display","flexDirection","disabled","Profile","WRITE_MESSAGE","MessageInput","typedMessage","setTypedMessage","writeMessage","messageSubmitHandler","creatorId","MessageBox","userClass","creator","marginLeft","Drawer","Header","drawer","setDrawer","alignSelf","animation","LEAVE_ROOM","ROOM_DETAILS","ROOM_MESSAGES","roomMessages","ChatPage","joinRoomInfo","leaveRoom","useEffect","newMessage","useSubscription","getRoomMessages","alignItems","fontWeight","fontSize","textDecoration","findRoom","roomCreator","overflowWrap","navigator","clipboard","writeText","roomMembers","map","member","width","CREATE_ROOM","JoinRoom","setRoomId","createdRoomInfo","roomData","roomLoading","submitHandler","createRoomClickHandler","joinRoom","createRoom","link","WebSocketLink","uri","options","reconnect","client","ApolloClient","cache","InMemoryCache","App","setUserId","setIsLoggedIn","setName","useAuth","Provider","path","to","render"],"mappings":"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","file":"static/js/main.3d065224.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext({\r\n  isLoggedIn: false,\r\n  userId: null,\r\n  name: null,\r\n  roomId: null,\r\n  logIn: () => {},\r\n  roomJoin: () => {},\r\n});\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"./input.css\";\r\n\r\nexport default function Input(props) {\r\n  return (\r\n    <div className=\"input-component\">\r\n      <label>{props.label}</label>\r\n      <br />\r\n      <input\r\n        onChange={(event) => {\r\n          props.onChange(props.label, event.target.value);\r\n        }}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\n\nimport \"./LoadingSpinner.css\";\n\nconst LoadingSpinner = (props) => {\n  return (\n    <div className={`${props.asOverlay && \"loading-spinner__overlay\"}`}>\n      <div className=\"loader\">\n        <div className=\"dots\">\n          <div className=\"dot\"></div>\n          <div className=\"dot\"></div>\n          <div className=\"dot\"></div>\n          <div className=\"dot\"></div>\n          <div className=\"dot\"></div>\n          <div className=\"dot\"></div>\n          <div className=\"dot\"></div>\n          <div className=\"dot\"></div>\n          <div className=\"dot\"></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./BackDrop.css\";\r\n\r\nfunction BackDrop(props) {\r\n  return ReactDOM.createPortal(\r\n    <div className=\"back-drop\" onClick={props.onClick}></div>,\r\n    document.getElementById(\"back-drop\")\r\n  );\r\n}\r\n\r\nexport default BackDrop;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { ImCross } from \"react-icons/im\";\r\n\r\nimport \"./Modal.css\";\r\nimport BackDrop from \"./BackDrop\";\r\n\r\nfunction ModalOverLay(props) {\r\n  const content = (\r\n    <div className={`modal ${props.className}`}>\r\n      <header className={`modal__header`}>\r\n        <h2>{props.header}</h2>\r\n        <ImCross onClick={props.onCancel} style={{ cursor: \"pointer\" }} />\r\n      </header>\r\n      <form\r\n        onSubmit={\r\n          props.onSumbit ? props.onSubmit : (event) => event.preventDefault()\r\n        }\r\n      >\r\n        <div className={`modal__content ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n\r\n  return ReactDOM.createPortal(content, document.getElementById(\"modal\"));\r\n}\r\n\r\nfunction Modal(props) {\r\n  return (\r\n    <React.Fragment>\r\n      {props.show && <BackDrop onClick={props.onCancel} />}\r\n\r\n      <ModalOverLay {...props} />\r\n    </React.Fragment>\r\n  );\r\n}\r\nexport default Modal;\r\n","import React, { useState, useContext, useCallback } from \"react\";\r\nimport { useMutation, gql } from \"@apollo/client\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { BsTriangleFill } from \"react-icons/bs\";\r\nimport Input from \"../components/input\";\r\nimport { AuthContext } from \"../components/context/auth-context\";\r\nimport LoadingSpinner from \"../components/LoadingSpinner\";\r\nimport Modal from \"../components/portals/Modal\";\r\nimport \"./authentication.css\";\r\nlet SIGN_UP;\r\nlet LOG_IN;\r\ntry {\r\n  SIGN_UP = gql`\r\n    mutation($email: String!, $password: String!, $name: String!) {\r\n      createUser(email: $email, password: $password, name: $name) {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  `;\r\n\r\n  LOG_IN = gql`\r\n    mutation($email: String!, $password: String!) {\r\n      loginUser(email: $email, password: $password) {\r\n        id\r\n        name\r\n        email\r\n      }\r\n    }\r\n  `;\r\n} catch (err) {\r\n  console.log(err);\r\n}\r\nfunction Authentication() {\r\n  const [login, setLogin] = useState(false);\r\n  const context = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  const [error, setError] = useState(false);\r\n  const [forumState, setForumState] = useState({\r\n    Name: \"\",\r\n    Email: \"\",\r\n    Password: \"\",\r\n  });\r\n\r\n  const inputChangeHandler = useCallback((type, value) => {\r\n    setForumState((prev) => {\r\n      return { ...prev, [type]: value };\r\n    });\r\n  }, []);\r\n\r\n  const [signUpUser, { data: signUpData, loading }] = useMutation(SIGN_UP, {\r\n    update(_, res) {\r\n      console.log(res);\r\n    },\r\n    onError(err) {\r\n      setError(err);\r\n    },\r\n  });\r\n  const [loginUser, { data: loginData, loading: loginLoading }] = useMutation(\r\n    LOG_IN,\r\n    {\r\n      update(_, res) {\r\n        console.log(res);\r\n      },\r\n      onError(err) {\r\n        setError(err);\r\n      },\r\n    }\r\n  );\r\n\r\n  const authSubmit = useCallback(() => {\r\n    try {\r\n      if (!login) {\r\n        signUpUser({\r\n          variables: {\r\n            email: forumState.Email,\r\n            password: forumState.Password,\r\n            name: forumState.Name,\r\n          },\r\n        });\r\n      } else {\r\n        loginUser({\r\n          variables: { email: forumState.Email, password: forumState.Password },\r\n        });\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }, [login, signUpUser, forumState, loginUser]);\r\n\r\n  if (signUpData || loginData) {\r\n    if (signUpData) {\r\n      context.logIn(signUpData.createUser.id, signUpData.createUser.name);\r\n    } else {\r\n      context.logIn(loginData.loginUser.id, loginData.loginUser.name);\r\n    }\r\n    history.push(\"/joinRoom\");\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {(loading || loginLoading) && <LoadingSpinner asOverlay={true} />}\r\n      {error && (\r\n        <Modal\r\n          show={error}\r\n          onCancel={() => {\r\n            setError(false);\r\n          }}\r\n        >\r\n          <h3>{error.message}</h3>\r\n        </Modal>\r\n      )}\r\n\r\n      <div className=\"authentication-page\">\r\n        <p>Scoup</p>\r\n        <br />\r\n        <br />\r\n        <div style={{ display: \"flex\", flexDirection: \"column\" }}>\r\n          <div className=\"authenticate-box\">\r\n            <div className=\"toggle-auth\">\r\n              {!login && (\r\n                <button\r\n                  className=\"button btnOrange btnPush\"\r\n                  onClick={() => {\r\n                    setLogin(true);\r\n                  }}\r\n                >\r\n                  Sign In\r\n                </button>\r\n              )}\r\n\r\n              {login && (\r\n                <button\r\n                  className=\"button btnOrange btnPush\"\r\n                  onClick={() => {\r\n                    setLogin(false);\r\n                  }}\r\n                >\r\n                  Sign Up\r\n                </button>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"authentication-inputs\">\r\n              {!login && <span>Sign Up</span>}\r\n              {login && <span>Sign In</span>}\r\n              {!login && (\r\n                <Input\r\n                  type=\"text\"\r\n                  placeholder=\"Example Sharma\"\r\n                  onChange={inputChangeHandler}\r\n                  label=\"Name\"\r\n                />\r\n              )}\r\n              <Input\r\n                type=\"email\"\r\n                placeholder=\"example@example.com\"\r\n                label=\"Email\"\r\n                onChange={inputChangeHandler}\r\n              />\r\n              <Input\r\n                type=\"Password\"\r\n                placeholder=\"************\"\r\n                label=\"Password\"\r\n                onChange={inputChangeHandler}\r\n              />\r\n            </div>\r\n            <div className=\"submit-details\">\r\n              <button\r\n                className=\"button btnOrange btnPush\"\r\n                onClick={authSubmit}\r\n                disabled={\r\n                  !(\r\n                    (forumState.Name || login) &&\r\n                    forumState.Email &&\r\n                    forumState.Password\r\n                  )\r\n                }\r\n              >\r\n                Go\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Authentication;\r\n","import React from \"react\";\r\n\r\nimport \"./profile.css\";\r\n\r\nexport default function Profile(props) {\r\n  return (\r\n    <div className=\"member-profile\">\r\n      <span>{props.name}</span>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useContext, useCallback } from \"react\";\r\nimport { gql, useMutation } from \"@apollo/client\";\r\nimport { AuthContext } from \"./context/auth-context\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Modal from \"../components/portals/Modal\";\r\nimport \"./messageInput.css\";\r\nimport { IoSend } from \"react-icons/io5\";\r\n\r\nconst WRITE_MESSAGE = gql`\r\n  mutation($message: String!, $creatorId: ID!, $roomId: ID!) {\r\n    writeMessage(creatorId: $creatorId, roomId: $roomId, message: $message) {\r\n      content\r\n      room {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function MessageInput(props) {\r\n  const [typedMessage, setTypedMessage] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n\r\n  const [writeMessage] = useMutation(WRITE_MESSAGE, {\r\n    update(_, res) {},\r\n    onError(err) {\r\n      setError(err);\r\n    },\r\n  });\r\n  const context = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  const messageSubmitHandler = useCallback(\r\n    (event) => {\r\n      event.preventDefault();\r\n      if (typedMessage) {\r\n        writeMessage({\r\n          variables: {\r\n            message: typedMessage,\r\n            creatorId: context.userId,\r\n            roomId: props.roomId,\r\n          },\r\n        });\r\n      }\r\n      setTypedMessage(\"\");\r\n    },\r\n    [props.roomId, typedMessage, writeMessage, context]\r\n  );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {\" \"}\r\n      {error && (\r\n        <Modal show={error} onCancel={() => setError(false)}>\r\n          {error.message}\r\n          <br />\r\n          <button\r\n            className=\"modal-button\"\r\n            onClick={() => {\r\n              context.roomJoin(\"\");\r\n              history.push(\"/joinRoom\");\r\n            }}\r\n          >\r\n            Leave\r\n          </button>\r\n        </Modal>\r\n      )}\r\n      <form onSubmit={messageSubmitHandler} className=\"type-message\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"how its going...\"\r\n          value={typedMessage}\r\n          onChange={(event) => setTypedMessage(event.target.value)}\r\n        />\r\n        <IoSend className=\"send-icon\" onClick={messageSubmitHandler} />\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\n\r\nimport { AuthContext } from \"./context/auth-context\";\r\n\r\nimport \"./messageBox.css\";\r\n\r\nexport default function MessageBox(props) {\r\n  let userClass;\r\n  const context = useContext(AuthContext);\r\n\r\n  if (props.message.creator.id === context.userId) userClass = \"align-right\";\r\n\r\n  return (\r\n    <div className={`message-container ${userClass}`}>\r\n      <div className=\"name-container\">\r\n        <span style={{ marginLeft: \"10px\" }}>{props.message.creator.name}</span>\r\n      </div>\r\n\r\n      <div className=\"content-container\">\r\n        <span>{props.message.content}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./drawer.css\";\r\n\r\nexport default function Drawer(props) {\r\n  return <div>{props.children}</div>;\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport Drawer from \"../components/drawer\";\r\nimport { FaChevronCircleDown } from \"react-icons/fa\";\r\n\r\nimport { FaChevronCircleUp } from \"react-icons/fa\";\r\nimport \"./Header.css\";\r\n\r\nexport default function Header(props) {\r\n  const [drawer, setDrawer] = useState(false);\r\n  return (\r\n    <div className={`header-box ${props.className}`}>\r\n      <div className=\"header-content\">\r\n        <p>Scoup</p>\r\n        {!drawer && (\r\n          <FaChevronCircleDown\r\n            className=\"details-button\"\r\n            onClick={() => {\r\n              setDrawer((prev) => !prev);\r\n            }}\r\n          />\r\n        )}\r\n        {drawer && (\r\n          <FaChevronCircleUp\r\n            className=\"details-button\"\r\n            onClick={() => {\r\n              setDrawer((prev) => !prev);\r\n            }}\r\n          />\r\n        )}\r\n      </div>\r\n      {drawer && (\r\n        <div\r\n          style={{\r\n            alignSelf: \"center\",\r\n            animation: \"fadeInDown 600ms ease-in-out\",\r\n          }}\r\n        >\r\n          <Drawer {...props} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { gql, useMutation, useSubscription } from \"@apollo/client\";\r\n\r\nimport { AuthContext } from \"../components/context/auth-context\";\r\nimport Profile from \"../components/profile\";\r\nimport MessageInput from \"../components/messageInput\";\r\nimport MessageBox from \"../components/messageBox\";\r\nimport LoadingSpinner from \"../components/LoadingSpinner\";\r\nimport Header from \"../components/Header\";\r\nimport { HiOutlineClipboardCopy } from \"react-icons/hi\";\r\n\r\nimport \"./chatPage.css\";\r\nimport Modal from \"../components/portals/Modal\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst LEAVE_ROOM = gql`\r\n  mutation($roomId: ID!, $userId: ID!) {\r\n    leaveRoom(userId: $userId, roomId: $roomId)\r\n  }\r\n`;\r\n\r\nconst ROOM_DETAILS = gql`\r\n  mutation($roomId: ID!) {\r\n    findRoom(roomId: $roomId) {\r\n      id\r\n      roomCreator {\r\n        id\r\n        name\r\n      }\r\n      roomMembers {\r\n        name\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst ROOM_MESSAGES = gql`\r\n  subscription($roomId: ID!) {\r\n    getRoomMessages(roomId: $roomId) {\r\n      content\r\n      creator {\r\n        name\r\n        id\r\n      }\r\n      id\r\n    }\r\n  }\r\n`;\r\nlet roomMessages = [];\r\nexport default function ChatPage() {\r\n  const [error, setError] = useState(null);\r\n  const history = useHistory();\r\n\r\n  const [joinRoomInfo, { data, loading }] = useMutation(ROOM_DETAILS, {\r\n    update(_, res) {},\r\n    onError(err) {\r\n      console.log(err);\r\n      console.log(err.message);\r\n      setError(err);\r\n    },\r\n  });\r\n\r\n  const [leaveRoom] = useMutation(LEAVE_ROOM, {\r\n    update(_, res) {},\r\n    onError(err) {\r\n      setError(err);\r\n    },\r\n  });\r\n\r\n  const context = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    joinRoomInfo({\r\n      variables: {\r\n        roomId: context.roomId,\r\n      },\r\n    });\r\n  }, [joinRoomInfo, context]);\r\n\r\n  const { data: newMessage } = useSubscription(ROOM_MESSAGES, {\r\n    variables: { roomId: context.roomId },\r\n  });\r\n  if (newMessage) {\r\n    roomMessages.push(newMessage.getRoomMessages);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {loading && <LoadingSpinner asOverlay={true} />}\r\n      {error && (\r\n        <Modal show={error} onCancel={() => setError(false)}>\r\n          {error.message}\r\n        </Modal>\r\n      )}\r\n      {!error && (\r\n        <div className=\"chat-page\">\r\n          <div className=\"room-box\">\r\n            <h1>Scoup</h1>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <div className=\"room-creator\">\r\n                <div>\r\n                  <span>Creator - </span>\r\n                  <span\r\n                    style={{\r\n                      fontWeight: \"800\",\r\n                      fontSize: \"x-large\",\r\n                      textDecoration: \"underline\",\r\n                    }}\r\n                  >\r\n                    {data && data.findRoom.roomCreator.name}\r\n                  </span>\r\n                </div>\r\n                <br />\r\n                <div>\r\n                  <span>Room Id - </span>\r\n                  <span\r\n                    style={{\r\n                      fontWeight: 800,\r\n                      fontSize: \"larger\",\r\n                      overflowWrap: \"break-word\",\r\n                      textDecoration: \"underline\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {data && data.findRoom.id}\r\n                  </span>\r\n                  <br />\r\n                  <br />\r\n\r\n                  <HiOutlineClipboardCopy\r\n                    className=\"copy-icon \"\r\n                    onClick={() => {\r\n                      navigator.clipboard.writeText(data.findRoom.id);\r\n                    }}\r\n                  ></HiOutlineClipboardCopy>\r\n                </div>\r\n                <div>\r\n                  <button\r\n                    className=\"leave-room\"\r\n                    onClick={() => {\r\n                      leaveRoom({\r\n                        variables: {\r\n                          userId: context.userId,\r\n                          roomId: context.roomId,\r\n                        },\r\n                      });\r\n                      context.roomJoin(\"\");\r\n\r\n                      roomMessages = [];\r\n                      history.push(\"/joinRoom\");\r\n                    }}\r\n                  >\r\n                    Leave\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <div className=\"room-members\">\r\n                {data &&\r\n                  data.findRoom.roomMembers.map((member) => (\r\n                    <Profile\r\n                      name={member.name}\r\n                      key={member.id}\r\n                      id={member.id}\r\n                    />\r\n                  ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"message-box\">\r\n            <Header className=\"responsive-header\">\r\n              <div className=\"room-creator\">\r\n                <div>\r\n                  <span>Creator - </span>\r\n                  <span\r\n                    style={{\r\n                      fontWeight: \"800\",\r\n                      fontSize: \"x-large\",\r\n                      textDecoration: \"underline\",\r\n                    }}\r\n                  >\r\n                    {data && data.findRoom.roomCreator.name}\r\n                  </span>\r\n                </div>\r\n                <br />\r\n                <div>\r\n                  <span>Room Id - </span>\r\n                  <span\r\n                    style={{\r\n                      fontWeight: 800,\r\n                      fontSize: \"larger\",\r\n                      overflowWrap: \"break-word\",\r\n                      textDecoration: \"underline\",\r\n                    }}\r\n                  >\r\n                    {\" \"}\r\n                    {data && data.findRoom.id}\r\n                  </span>\r\n                </div>\r\n                <div>\r\n                  <br />\r\n                  <button\r\n                    className=\"leave-room\"\r\n                    onClick={() => {\r\n                      roomMessages = [];\r\n                      leaveRoom({\r\n                        variables: {\r\n                          userId: context.userId,\r\n                          roomId: context.roomId,\r\n                        },\r\n                      });\r\n                      history.push(\"/joinRoom\");\r\n                    }}\r\n                  >\r\n                    Leave\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </Header>\r\n            <div className=\"messages-space\">\r\n              <div\r\n                style={{\r\n                  width: \"100%\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  alignItems: \"flex-start\",\r\n                }}\r\n              >\r\n                {roomMessages.map((message) => (\r\n                  <MessageBox message={message} key={message.id} />\r\n                ))}\r\n              </div>\r\n            </div>\r\n            {data && <MessageInput roomId={data.findRoom.id} />}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useCallback, useContext, useState } from \"react\";\r\nimport { gql, useMutation } from \"@apollo/client\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { AuthContext } from \"../components/context/auth-context\";\r\nimport { FaArrowAltCircleRight } from \"react-icons/fa\";\r\nimport LoadingSpinner from \"../components/LoadingSpinner\";\r\nimport Modal from \"../components/portals/Modal\";\r\n\r\nimport \"./joinRoom.css\";\r\n\r\nconst ROOM_DETAILS = gql`\r\n  mutation($userId: ID!, $roomId: ID!) {\r\n    joinRoom(userId: $userId, roomId: $roomId) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nconst CREATE_ROOM = gql`\r\n  mutation($userId: ID!) {\r\n    createRoom(creatorId: $userId) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function JoinRoom() {\r\n  const [roomId, setRoomId] = useState(\"\");\r\n  const context = useContext(AuthContext);\r\n  const history = useHistory();\r\n  const [error, setError] = useState(false);\r\n\r\n  const [joinRoomInfo, { data, loading }] = useMutation(ROOM_DETAILS, {\r\n    update(_, res) {},\r\n    onError(err) {\r\n      setError(err);\r\n    },\r\n  });\r\n  const [\r\n    createdRoomInfo,\r\n    { data: roomData, loading: roomLoading },\r\n  ] = useMutation(CREATE_ROOM, {\r\n    update(_, res) {},\r\n    onError(err) {\r\n      setError(err);\r\n    },\r\n  });\r\n\r\n  const submitHandler = useCallback(() => {\r\n    joinRoomInfo({\r\n      variables: {\r\n        userId: context.userId,\r\n        roomId: roomId,\r\n      },\r\n    });\r\n  }, [context, roomId, joinRoomInfo]);\r\n\r\n  const createRoomClickHandler = useCallback(() => {\r\n    createdRoomInfo({\r\n      variables: {\r\n        userId: context.userId,\r\n      },\r\n    });\r\n  }, [context, createdRoomInfo]);\r\n\r\n  if (data) {\r\n    context.roomJoin(data.joinRoom.id);\r\n    history.push(\"/chatRoom\");\r\n  }\r\n\r\n  if (roomData) {\r\n    context.roomJoin(roomData.createRoom.id);\r\n    history.push(\"/chatRoom\");\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {(loading || roomLoading) && <LoadingSpinner asOverlay={true} />}\r\n      {error && (\r\n        <Modal show={error} onCancel={() => setError(false)}>\r\n          {error.message}\r\n        </Modal>\r\n      )}\r\n      <div className=\"join-room-page\">\r\n        <div className=\"block-1\">\r\n          <div className=\"block-2\">\r\n            <span>Join Room</span>\r\n\r\n            <input\r\n              type=\"text\"\r\n              value={roomId}\r\n              onChange={(event) => {\r\n                setRoomId(event.target.value);\r\n              }}\r\n              placeholder=\"XXXXXXXXXXXX\"\r\n            />\r\n\r\n            <FaArrowAltCircleRight\r\n              className=\"room-submit-icon\"\r\n              onClick={submitHandler}\r\n            />\r\n          </div>\r\n          <span>OR</span>\r\n          <button onClick={createRoomClickHandler}>Create Room</button>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useCallback } from \"react\";\r\n\r\nexport const useAuth = () => {\r\n  const [userId, setUserId] = useState(null);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [name, setName] = useState(null);\r\n  const [roomId, setRoomId] = useState(null);\r\n\r\n  const logIn = useCallback((userId, name) => {\r\n    setUserId(userId);\r\n    setIsLoggedIn(true);\r\n    setName(name);\r\n  }, []);\r\n\r\n  const roomJoin = useCallback((roomId) => {\r\n    setRoomId(roomId);\r\n  }, []);\r\n\r\n  return { userId, name, isLoggedIn, roomId, logIn, roomJoin };\r\n};\r\n","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { ApolloClient, InMemoryCache } from \"@apollo/client\";\nimport { ApolloProvider } from \"@apollo/client\";\nimport { WebSocketLink } from \"@apollo/client/link/ws\";\n\nimport { AuthContext } from \"./components/context/auth-context\";\nimport Authentication from \"./pages/authentication\";\nimport ChatPage from \"./pages/chatPage\";\nimport JoinRoom from \"./pages/joinRoom\";\nimport { useAuth } from \"./components/hook/auth-hook\";\n\nimport \"./App.css\";\n\nconst link = new WebSocketLink({\n  uri: \"wss://chat-app02.herokuapp.com/graphql\",\n  options: {\n    reconnect: true,\n  },\n});\n//\" ws://localhost:4000/graphql\"\nconst client = new ApolloClient({\n  link,\n  uri: \"https://chat-app02.herokuapp.com/graphql \",\n  cache: new InMemoryCache(),\n});\n\n//\" http://localhost:4000/graphql  \"\nfunction App() {\n  const { userId, name, isLoggedIn, roomId, logIn, roomJoin } = useAuth();\n\n  return (\n    <ApolloProvider client={client}>\n      <AuthContext.Provider\n        value={{\n          userId: userId,\n          isLoggedIn: isLoggedIn,\n          name: name,\n          roomId: roomId,\n          roomJoin: roomJoin,\n          logIn: logIn,\n        }}\n      >\n        <div className=\"App\">\n          <Router>\n            <Switch>\n              {roomId && (\n                <Route path=\"/chatRoom\">\n                  <ChatPage />\n                </Route>\n              )}\n              {isLoggedIn && (\n                <Route path=\"/joinRoom\">\n                  <JoinRoom />\n                </Route>\n              )}\n              <Route path=\"/\">\n                <Authentication />\n              </Route>\n              <Redirect to=\"/\" />\n            </Switch>\n          </Router>\n        </div>\n      </AuthContext.Provider>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}